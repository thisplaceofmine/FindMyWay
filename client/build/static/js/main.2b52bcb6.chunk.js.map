{"version":3,"sources":["api/index.js","component/History.js","actions/index.js","actions/type.js","component/Header.js","component/Dashbroad.js","component/Map/index.js","component/User.js","component/ErrorRedirect.js","App.js","reducer/errorRedirect.js","reducer/index.js","reducer/userReducer.js","reducer/queryReducer.js","reducer/handleToken.js","index.js"],"names":["query","axios","create","baseURL","createBrowserHistory","updateUserFav","userFav","token","origin","dispatch","a","post","headers","authorization","res","type","payload","data","errorHandleHelper","error","isUndefined","response","Error","console","log","request","message","history","push","Header","props","useDispatch","useEffect","get","storedata","useSelector","state","user","useState","active","direction","name","list","setList","handleHeaderclick","e","value","Number","currentTarget","getAttribute","tempArray","forEach","className","Navbar","bg","expand","Brand","Collapse","id","Toggle","aria-controls","Nav","map","i","Item","key","to","onClick","isNull","href","Dropdown","givenName","email","Menu","Divider","renderLoginBotton","Dashbroad","style","textDecoration","width","fontSize","Map","setQuery","selectedPlace","setSelectedPlace","infoOpen","setinfoOpen","queryData","setQueryData","features","userFavourite","setUserFavourite","isLoaded","useLoadScript","googleMapsApiKey","process","crossdomain","pinlist","datalist","POIDataList","variant","justify","parentData","NavDropdown","title","TypeNameEN","Features","childData","NameEN","role","mapContainerStyle","height","zoom","center","lat","lng","isEmpty","position","geometry","coordinates","onCloseClick","properties","place","filter","length","size","tempArray2","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","renderUserFavourite","listStyleType","paddingInlineStart","Dataset","Address","Telephone","website","Website","target","rel","renderMap","UserInfoPage","setUser","handleFormSubmit","userInfo","Form","autoComplete","Row","Group","as","Col","md","controlId","Label","Control","placeholder","onChange","prevState","familyName","disabled","dayjs","createdAt","format","updatedAt","Button","varient","ErrorRedirect","useHistory","errorRedirect","setTimeout","App","path","exact","component","Dashboard","MapPage","UserPage","initErrState","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b52bcb6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const server = axios.create({\r\n  baseURL: 'http://localhost:5000/'\r\n});\r\n\r\nexport const query =  axios.create({\r\n  baseURL:\r\n    'https://geodata.gov.hk/gs/api/v1.0.0/'\r\n});\r\n\r\n","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","import { query } from '../api';\r\nimport axios from 'axios';\r\nimport { isUndefined } from 'lodash';\r\nimport history from '../component/History';\r\n\r\nimport {\r\n  FETCH_USER,\r\n  FETCH_MAP_QUERY,\r\n  UPDATE_USER,\r\n  ERR_USER_MISSING,\r\n  HANDLE_TOKEN,\r\n  ERR_REDIRECT,\r\n} from './type';\r\n\r\nexport const fetchUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/auth/google/current_user');\r\n    console.log(res);\r\n    dispatch({ type: FETCH_USER, payload: res.data.data });\r\n    dispatch({ type: HANDLE_TOKEN, payload: res.data.token });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchQuery = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await query.get(\r\n      `/geoDataQuery?q=%7Bv%3A%221%2E0%2E0%22%2Cid%3A%22${id}%22%2Clang%3A%22ALL%22%7D`,\r\n      { crossdomain: true }\r\n    );\r\n    dispatch({ type: FETCH_MAP_QUERY, payload: res.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateUserFav = (userFav, token, origin) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/map', userFav, {\r\n      headers: { authorization: `Bearer ${token}` },\r\n    });\r\n    // console.log(res);\r\n    dispatch({ type: UPDATE_USER, payload: res.data });\r\n  } catch (error) {\r\n    errorHandleHelper(error, dispatch, origin);\r\n  }\r\n};\r\n\r\nexport const updateUserInfo = (userInfo, token, origin) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/user', userInfo, {\r\n      headers: { authorization: `Bearer ${token}` },\r\n    });\r\n    dispatch({ type: FETCH_USER, payload: res.data.data });\r\n    dispatch({ type: HANDLE_TOKEN, payload: res.data.token });\r\n    dispatch({\r\n      type: ERR_REDIRECT,\r\n      payload: {\r\n        origin,\r\n        message: 'User Data has been updated!',\r\n      },\r\n    });\r\n    history.push('/errorredirect');\r\n  } catch (error) {\r\n    errorHandleHelper(error, dispatch, origin);\r\n  }\r\n};\r\n\r\nconst errorHandleHelper = async (error, dispatch, origin) => {\r\n  if (!isUndefined(error.response.data.Error)) {\r\n    // Token missing or invalid\r\n    dispatch({ type: ERR_USER_MISSING });\r\n    // console.log(origin);\r\n    isUndefined(origin) ||\r\n      dispatch({\r\n        type: ERR_REDIRECT,\r\n        payload: {\r\n          origin,\r\n          message: 'Login credential is invalid, Please re-login. ',\r\n        },\r\n      });\r\n    history.push('/errorredirect');\r\n    // await axios.get('/auth/google/errorredirect');\r\n  } else {\r\n    // Catch all\r\n    console.log(error.response);\r\n    console.log(error.request);\r\n  }\r\n};\r\n","export const FETCH_USER = 'FETCH_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\n\r\nexport const FETCH_MAP_QUERY = 'FETCH_MAP_QUERY';\r\n\r\nexport const HANDLE_TOKEN = 'HANDLE_TOKEN';\r\n\r\nexport const ERR_USER_MISSING = 'ERR_USER_MISSING';\r\n\r\nexport const ERR_REDIRECT = 'ERR_REDIRECT';\r\nexport const ERR_REDIRECT_RESET = 'ERR_REDIRECT_RESET';\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isNull, isUndefined } from 'lodash';\r\nimport { Nav, Navbar, Dropdown } from 'react-bootstrap';\r\n\r\nimport { fetchUser } from '../actions';\r\nimport history from './History';\r\n\r\nconst Header = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUser());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const storedata = useSelector((state) => ({\r\n    user: state.user,\r\n  }));\r\n\r\n  const initialList = [\r\n    { active: false, direction: '/', name: 'Home' },\r\n    { active: false, direction: '/users', name: 'User' },\r\n    { active: false, direction: '/maps', name: 'Map' },\r\n  ];\r\n\r\n  const [list, setList] = useState(initialList);\r\n\r\n  const handleHeaderclick = (e) => {\r\n    let value = Number(e.currentTarget.getAttribute('value'));\r\n    let tempArray = [...list];\r\n    tempArray.forEach((e) => (e.active = false));\r\n    tempArray[value].active = true;\r\n    setList(tempArray);\r\n  };\r\n\r\n  const renderLoginBotton = () => {\r\n    if (!isNull(storedata.user)) {\r\n      switch (storedata.user) {\r\n        case false:\r\n          return (\r\n            <div className='button'>\r\n              <a href='/auth/google'>Login with google</a>\r\n            </div>\r\n          );\r\n        default:\r\n          return (\r\n            <Dropdown>\r\n              <Dropdown.Toggle>\r\n                Welcome back{' '}\r\n                {isUndefined(storedata.user.name.givenName)\r\n                  ? storedata.user.email\r\n                  : storedata.user.name.givenName}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className='dropdown-menu-right'>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    history.push('/users');\r\n                  }}\r\n                >\r\n                  User\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item href='/auth/google/logout'>Logout</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          );\r\n      }\r\n    } else {\r\n      return <div className='button'>Loading</div>;\r\n    }\r\n  };\r\n\r\n  const renderheader = () => {\r\n    return list.map((data, i) => {\r\n      return (\r\n        <Nav.Item className='' key={i}>\r\n          <Link\r\n            className='nav-link'\r\n            to={data.direction}\r\n            value={i}\r\n            onClick={handleHeaderclick}\r\n          >\r\n            {data.name}\r\n          </Link>\r\n        </Nav.Item>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Navbar bg='light' expand='lg'>\r\n        <Navbar.Brand>Find My Way</Navbar.Brand>\r\n        <Navbar.Collapse id='header'>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Nav className='mr-auto'>{renderheader()}</Nav>\r\n        </Navbar.Collapse>\r\n        <div>{renderLoginBotton()}</div>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Dashbroad = () => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='d-flex my-5'>\r\n        <NavLink to='/users' style={{ textDecoration: 'none', width: '50%' }}>\r\n          <button\r\n            className='btn btn-warning btn-lg '\r\n            style={{ fontSize: '50px', width: '100%' }}\r\n          >\r\n            <ion-icon name='person-outline' />\r\n            <br />\r\n            User\r\n          </button>\r\n        </NavLink>\r\n        <NavLink to='/maps' style={{ textDecoration: 'none', width: '50%' }}>\r\n          <button\r\n            className='btn btn-success btn-lg '\r\n            style={{ fontSize: '50px', width: '100%' }}\r\n          >\r\n            <ion-icon name='map-outline' />\r\n            <br />\r\n            Map\r\n          </button>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashbroad;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  useLoadScript,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from '@react-google-maps/api';\r\nimport {\r\n  NavDropdown,\r\n  Navbar,\r\n  Nav,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport { fetchQuery, updateUserFav } from '../../actions';\r\nimport POIDataList from './data.json';\r\n\r\nconst Map = () => {\r\n  //  Inital state setup\r\n  const initalQuery = '';\r\n  const [query, setQuery] = useState(initalQuery);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [infoOpen, setinfoOpen] = useState(false);\r\n  const [queryData, setQueryData] = useState({});\r\n  const [userFavourite, setUserFavourite] = useState({ features: [] });\r\n\r\n  // Google map config\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAP_API,\r\n  });\r\n\r\n  // Extract data from Redux store\r\n  const storedata = useSelector((state) => ({\r\n    query: state.query,\r\n    user: state.user,\r\n    token: state.token,\r\n  }));\r\n\r\n  //  Fetching data from external api by action\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (query === initalQuery) {\r\n      return;\r\n    } else {\r\n      dispatch(fetchQuery(query));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    setQueryData(storedata.query);\r\n  }, [storedata.query]);\r\n\r\n  useEffect(() => {\r\n    if (!storedata.user || storedata.user.pinlist === userFavourite.features) {\r\n      return;\r\n    } else {\r\n      setUserFavourite({ features: storedata.user.pinlist });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [storedata.user]);\r\n\r\n  //  Rendering and mapping the Google Map Marker\r\n  const renderPOIMarker = (queryArray) => {\r\n    return queryArray.map((data, i) => {\r\n      const position = {\r\n        lat: data.geometry.coordinates[1],\r\n        lng: data.geometry.coordinates[0],\r\n      };\r\n      return (\r\n        <Marker\r\n          onClick={() => {\r\n            setSelectedPlace(data);\r\n            if (infoOpen) {\r\n              setinfoOpen(false);\r\n            }\r\n            setinfoOpen(true);\r\n          }}\r\n          key={i}\r\n          position={position}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  // Rendering Point of interest\r\n  const renderPOI = (datalist) => {\r\n    return (\r\n      <Navbar bg='dark' variant='dark' id='Point of interest' >\r\n        <Nav justify className='mr-auto '>\r\n          <div className='collapse navbar-collapse'>\r\n            {datalist.map((parentData, i) => {\r\n              return (\r\n                <NavDropdown\r\n                  title={parentData.TypeNameEN}\r\n                  id={parentData.TypeNameEN}\r\n                  key={i}\r\n                >\r\n                  {parentData.Features.map((childData, i) => {\r\n                    return (\r\n                      <NavDropdown.Item\r\n                        onClick={() => {\r\n                          setQuery(childData.id);\r\n                        }}\r\n                        key={i}\r\n                      >\r\n                        {childData.NameEN}\r\n                      </NavDropdown.Item>\r\n                    );\r\n                  })}\r\n                </NavDropdown>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className='btn-group' role='Toolbar button group'>\r\n            <button\r\n              className='btn btn-sm btn-outline-light'\r\n              onClick={() => {\r\n                setQueryData(userFavourite);\r\n              }}\r\n            >\r\n              {' '}\r\n              My favourite\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-outline-danger '\r\n              onClick={() => {\r\n                setQuery(initalQuery);\r\n              }}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  };\r\n\r\n  // Help render the infoBox website field\r\n  const websiteRenderHelper = (website) => {\r\n    if (website === 'N.A.') {\r\n      return website;\r\n    } else {\r\n      return (\r\n        <a href={website} target='_blank' rel='noopener noreferrer'>\r\n          {website}\r\n        </a>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderUserFavourite = (place) => {\r\n    if (!storedata.user) {\r\n      return (\r\n        <OverlayTrigger\r\n          placement='bottom'\r\n          delay={{ show: 150, hide: 500 }}\r\n          overlay={(props) => {\r\n            return (\r\n              <Tooltip id='Favourite-Popup' {...props}>\r\n                You must login to save favourite.\r\n              </Tooltip>\r\n            );\r\n          }}\r\n        >\r\n          <ion-icon name='heart-outline' size='small' />\r\n        </OverlayTrigger>\r\n      );\r\n    } else {\r\n      const result = userFavourite.features.filter((data) => {\r\n        return (\r\n          data.properties['Facility Name'] === place.properties['Facility Name']\r\n        );\r\n      });\r\n\r\n      if (result.length === 0) {\r\n        const tempArray = [...userFavourite.features, place];\r\n        return (\r\n          <ion-icon\r\n            name='heart-outline'\r\n            size='small'\r\n            onClick={() =>\r\n              dispatch(updateUserFav(tempArray, storedata.token, '/maps'))\r\n            }\r\n          />\r\n        );\r\n      } else {\r\n        const tempArray2 = userFavourite.features.filter((data) => {\r\n          return (\r\n            data.properties['Facility Name'] !==\r\n            place.properties['Facility Name']\r\n          );\r\n        });\r\n        return (\r\n          <ion-icon\r\n            name='heart'\r\n            size='small'\r\n            onClick={() => {\r\n              dispatch(updateUserFav(tempArray2, storedata.token, '/maps'));\r\n            }}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderMap = () => {\r\n    return (\r\n      <div className='container'>\r\n        <h3 className='mx-auto  text-center my-2 '>Simple map</h3>\r\n        <div>\r\n          {/* <button\r\n            className='btn btm-sm'\r\n            onClick={() => {\r\n              console.log(userFavourite);\r\n            }}\r\n          >\r\n            Debug\r\n          </button> */}\r\n        </div>\r\n        <div>{renderPOI(POIDataList)}</div>\r\n        <GoogleMap\r\n          id='circle-example'\r\n          mapContainerStyle={{\r\n            height: '75vh',\r\n            width: '100%',\r\n          }}\r\n          zoom={11}\r\n          center={{ lat: 22.396427, lng: 114.109497 }}\r\n          onClick={() => setinfoOpen(false)}\r\n        >\r\n          {!isEmpty(queryData.features) && renderPOIMarker(queryData.features)}\r\n          {infoOpen && selectedPlace && (\r\n            <InfoWindow\r\n              position={{\r\n                lat: selectedPlace.geometry.coordinates[1],\r\n                lng: selectedPlace.geometry.coordinates[0],\r\n              }}\r\n              onCloseClick={() => {\r\n                setinfoOpen(false);\r\n              }}\r\n            >\r\n              <div>\r\n                <h6>\r\n                  {selectedPlace.properties['Facility Name']}{' '}\r\n                  {renderUserFavourite(selectedPlace)}\r\n                </h6>\r\n                <ul\r\n                  style={{ listStyleType: 'none', paddingInlineStart: '5px' }}\r\n                >\r\n                  <li>Type: {selectedPlace.properties.Dataset}</li>\r\n                  <li>Address: {selectedPlace.properties.Address}</li>\r\n                  <li>Telephone: {selectedPlace.properties.Telephone}</li>\r\n                  <li>\r\n                    Webside:{' '}\r\n                    {websiteRenderHelper(selectedPlace.properties.Website)}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n        </GoogleMap>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return isLoaded ? renderMap() : null;\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\nimport { updateUserInfo } from '../actions';\r\n\r\nconst UserInfoPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState();\r\n\r\n  const storedata = useSelector((state) => ({\r\n    user: state.user,\r\n    token: state.token,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setUser(storedata.user);\r\n  }, [storedata.user]);\r\n\r\n  const handleFormSubmit = () => {\r\n    dispatch(updateUserInfo(user, storedata.token, '/users'));\r\n  };\r\n\r\n\r\n\r\n  const userinfo = () => {\r\n    return (\r\n      <div className='container-fluid my-auto'>\r\n        <h2 className='text-center my-1'> PlaceHolder Header</h2>\r\n        {/* <button\r\n          className='btn btn-danger'\r\n          onClick={() => {\r\n            console.log(user);\r\n          }}\r\n        >\r\n          Debug\r\n        </button> */}\r\n        <Form autoComplete=''>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md='6' controlId='validationCustom01'>\r\n              <Form.Label>Given Name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Given Name'\r\n                value={user.name.givenName || ''}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setUser((prevState) => ({\r\n                    ...prevState,\r\n                    name: { ...prevState.name, givenName: value },\r\n                  }));\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='6' controlId='validationCustom02'>\r\n              <Form.Label>Family Name</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Family Name'\r\n                value={user.name.familyName || ''}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setUser((prevState) => ({\r\n                    ...prevState,\r\n                    name: { ...prevState.name, familyName: value },\r\n                  }));\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md='4' controlId='validationCustom03'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Email'\r\n                disabled\r\n                value={user.email}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='4' controlId='validationCustom03'>\r\n              <Form.Label>Profile Created</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Profile Created'\r\n                disabled\r\n                value={dayjs(user.createdAt).format('DD MMMM YYYY hh:mm:ss a')}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group as={Col} md='4' controlId='validationCustom03'>\r\n              <Form.Label>Profile Last Edited </Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Profile Last Edited '\r\n                disabled\r\n                value={dayjs(user.updatedAt).format('DD MMMM YYYY hh:mm:ss a')}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group\r\n              as={Col}\r\n              md='11'\r\n              controlId='validationCustom04'\r\n            ></Form.Group>\r\n            <Form.Group as={Col} md='1' controlId='validationCustom05'>\r\n              <Button varient='primary' onClick={handleFormSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const requestLogin = () => {\r\n    return (\r\n      <div className='container-fluid'>\r\n        <div className=' mx-auto my-4 '>\r\n          <h2 className='text-center'>You must Login to continue.</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return !isEmpty(user) ? userinfo() : requestLogin();\r\n};\r\nexport default UserInfoPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { ERR_REDIRECT_RESET } from '../actions/type';\r\nconst ErrorRedirect = (props) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const error = useSelector((state) => state.errorRedirect);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history.push(error.origin);\r\n    }, 5000);\r\n    return () => {\r\n      dispatch({ type: ERR_REDIRECT_RESET });\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container my-3'>\r\n      <div className='card text-center'>\r\n        <div className='card-body'>\r\n          <div>{error.message}</div>\r\n          <Link to={error.origin} className='card-link'>\r\n            You will be redirected in 5 seconds, or click here if your browser\r\n            does not redirect you.\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ErrorRedirect;\r\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './component/Header';\nimport Dashboard from './component/Dashbroad';\nimport MapPage from './component/Map/index';\nimport UserPage from './component/User';\nimport ErrorRedirect from './component/ErrorRedirect';\nimport history from './component/History';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Router history={history}>\n        <Header />\n        <Switch>\n          <Route path='/' exact component={Dashboard} />\n          <Route path='/maps' exact component={MapPage} />\n          <Route path='/users' exact component={UserPage} />\n          <Route path='/errorredirect' exact component={ErrorRedirect} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ERR_REDIRECT, ERR_REDIRECT_RESET } from '../actions/type';\r\n\r\nconst initErrState = { origin: '/', message: '' };\r\n\r\nexport default (state = initErrState, action) => {\r\n  switch (action.type) {\r\n    case ERR_REDIRECT:\r\n      return action.payload || initErrState;\r\n    case ERR_REDIRECT_RESET:\r\n      return initErrState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport user from './userReducer';\r\nimport query from './queryReducer';\r\nimport token from './handleToken';\r\nimport errorRedirect from './errorRedirect';\r\n\r\nexport default combineReducers({\r\n  user,\r\n  query,\r\n  token,\r\n  errorRedirect,\r\n});\r\n","import { FETCH_USER, UPDATE_USER, ERR_USER_MISSING } from '../actions/type';\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n    case UPDATE_USER:\r\n      return action.payload || false;\r\n    case ERR_USER_MISSING:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_MAP_QUERY } from '../actions/type';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_MAP_QUERY:\r\n      return { ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { HANDLE_TOKEN } from '../actions/type';\r\n\r\nexport default (state = '', action) => {\r\n  switch (action.type) {\r\n    case HANDLE_TOKEN:\r\n      return action.payload || '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport reducer from './reducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}